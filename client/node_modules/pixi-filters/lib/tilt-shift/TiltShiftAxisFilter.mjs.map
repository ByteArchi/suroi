{"version":3,"file":"TiltShiftAxisFilter.mjs","sources":["../../src/tilt-shift/TiltShiftAxisFilter.ts"],"sourcesContent":["import { Filter, GlProgram, GpuProgram, PointData } from 'pixi.js';\nimport { vertex, wgslVertex } from '../defaults';\nimport fragment from './tilt-shift.frag';\nimport source from './tilt-shift.wgsl';\n\n// @author Vico @vicocotea\n// original filter https://github.com/evanw/glfx.js/blob/master/src/filters/blur/tiltshift.js\n// by Evan Wallace : http://madebyevan.com/\n\n/**\n * Options for creating filter.\n */\ninterface TiltShiftAxisFilterOptions\n{\n    /** The strength of the blur. */\n    blur?: number;\n    /** The strength of the blur gradient */\n    gradientBlur?: number;\n    /** The position to start the effect at. */\n    start?: PointData;\n    /** The position to end the effect at. */\n    end?: PointData;\n    /** The axis that the filter is calculating for. */\n    axis?: 'vertical' | 'horizontal';\n}\n\n/**\n * A TiltShiftAxisFilter.\n *\n * @class\n * @extends Filter\n * @private\n */\nexport class TiltShiftAxisFilter extends Filter\n{\n    /** Default values for options. */\n    public static readonly DEFAULT_OPTIONS: TiltShiftAxisFilterOptions = {\n        /** The strength of the blur. */\n        blur: 100,\n        /** The strength of the blur gradient */\n        gradientBlur: 600,\n        /** The position to start the effect at. */\n        start: { x: 0, y: window.innerHeight / 2 },\n        /** The position to end the effect at. */\n        end: { x: 600, y: window.innerHeight / 2 },\n    };\n\n    public uniforms: {\n        uBlur: Float32Array;\n        uStart: PointData\n        uEnd: PointData;\n        uDelta: Float32Array;\n        uTexSize: Float32Array;\n    };\n\n    private _tiltAxis: TiltShiftAxisFilterOptions['axis'];\n\n    constructor(options?: TiltShiftAxisFilterOptions)\n    {\n        options = { ...TiltShiftAxisFilter.DEFAULT_OPTIONS, ...options } as TiltShiftAxisFilterOptions;\n\n        const gpuProgram = GpuProgram.from({\n            vertex: {\n                source: wgslVertex,\n                entryPoint: 'mainVertex',\n            },\n            fragment: {\n                source,\n                entryPoint: 'mainFragment',\n            },\n        });\n\n        const glProgram = GlProgram.from({\n            vertex,\n            fragment,\n            name: 'tilt-shift-axis-filter',\n        });\n\n        super({\n            gpuProgram,\n            glProgram,\n            resources: {\n                tiltShiftUniforms: {\n                    uBlur: {\n                        value: new Float32Array([\n                            options.blur ?? 100,\n                            options.gradientBlur ?? 600\n                        ]), type: 'vec2<f32>'\n                    },\n                    uStart: { value: options.start, type: 'vec2<f32>' },\n                    uEnd: { value: options.end, type: 'vec2<f32>' },\n                    uDelta: { value: new Float32Array([30, 30]), type: 'vec2<f32>' },\n                    uTexSize: { value: new Float32Array([window.innerWidth, window.innerHeight]), type: 'vec2<f32>' },\n                },\n            },\n        });\n\n        this.uniforms = this.resources.tiltShiftUniforms.uniforms;\n        this._tiltAxis = options.axis;\n        this.updateDelta();\n    }\n\n    /** Updates the filter delta values. */\n    protected updateDelta(): void\n    {\n        this.uniforms.uDelta[0] = 0;\n        this.uniforms.uDelta[1] = 0;\n\n        if (this._tiltAxis === undefined) return;\n\n        const end = this.uniforms.uEnd;\n        const start = this.uniforms.uStart;\n\n        const dx = end.x - start.x;\n        const dy = end.y - start.y;\n        const d = Math.sqrt((dx * dx) + (dy * dy));\n\n        const isVert = this._tiltAxis === 'vertical';\n\n        this.uniforms.uDelta[0] = !isVert ? dx / d : -dy / d;\n        this.uniforms.uDelta[1] = !isVert ? dy / d : dx / d;\n    }\n\n    // /** The strength of the blur. */\n    // get blur(): number { return this.uniforms.uBlur[0]; }\n    // set blur(value: number) { this.uniforms.uBlur[0] = value; }\n\n    // /** The strength of the gradient blur. */\n    // get gradientBlur(): number { return this.uniforms.uBlur[1]; }\n    // set gradientBlur(value: number) { this.uniforms.uBlur[1] = value; }\n\n    // /** The start position of the effect. */\n    // get start(): PointData { return this.uniforms.uStart; }\n    // set start(value: PointData)\n    // {\n    //     this.uniforms.uStart = value;\n    //     this.updateDelta();\n    // }\n\n    // /** The start position of the effect on the `x` axis. */\n    // get startX(): number { return this.start.x; }\n    // set startX(value: number)\n    // {\n    //     this.start.x = value;\n    //     this.updateDelta();\n    // }\n\n    // /** The start position of the effect on the `y` axis. */\n    // get startY(): number { return this.startY; }\n    // set startY(value: number)\n    // {\n    //     this.start.y = value;\n    //     this.updateDelta();\n    // }\n\n    // /** The end position of the effect. */\n    // get end(): PointData { return this.uniforms.uEnd; }\n    // set end(value: PointData)\n    // {\n    //     this.uniforms.uEnd = value;\n    //     this.updateDelta();\n    // }\n\n    // /** The end position of the effect on the `x` axis. */\n    // get endX(): number { return this.end.x; }\n    // set endX(value: number)\n    // {\n    //     this.end.x = value;\n    //     this.updateDelta();\n    // }\n\n    // /** The end position of the effect on the `y` axis. */\n    // get endY(): number { return this.end.y; }\n    // set endY(value: number)\n    // {\n    //     this.end.y = value;\n    //     this.updateDelta();\n    // }\n}\n"],"names":[],"mappings":"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"}